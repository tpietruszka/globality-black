 -1,9 +1,9 @@
 import pandas as pd
 
+
 def foo(df: pd.DataFrame, graph):
-
     df = (
         df
 
         # turn predictions to bool
         .assign(predictions=df.predictions.astype(bool))
@@ -27,27 +27,16 @@
     )
 
     df = df.assign(
         predictions=df.predictions.astype(bool),
 
-
         # create predictions2
         predictions2=df.predictions.astype(bool),
 
-
         predictions3=df.predictions.astype(bool),
 
-
-
-
-
         predictions4=df.predictions.astype(bool),
-
-
-
-
-
 
         # comment
         predictions5=df.predictions.astype(bool),
     )
 
@@ -75,26 +64,26 @@
     )
 
 
 def foo():
     return bool(
-            cls.get_dataframe(x, y)
+        cls.get_dataframe(x, y)
 
-            # this is a comment in
-            # multiple lines
-            .drop_duplicates(["a", "b"], keep=False)
+        # this is a comment in
+        # multiple lines
+        .drop_duplicates(["a", "b"], keep=False)
 
-            # get the number of unique pandas for the
-            # world to be saved
-            .groupby("country").pandas.nunique()
+        # get the number of unique pandas for the
+        # world to be saved
+        .groupby("country").pandas.nunique()
 
-            # at least `z` bla bla
-            >= z
-        )
+        # at least `z` bla bla
+        >= z
+    )
+
 
 class A:
-
     def foo_a():
         return bool(
             cls.get_dataframe(x, y)
 
             # this is a comment in
@@ -125,22 +114,19 @@
 
 
 def func(arg):
     arg = 5
 
-
-
-
     return arg
 
 
 # in this test case, we add spaces in the blank lines before the comment "spaces above"
 graph.use(
     "logging",
 
     "sklearn",
-     
+
     # spaces above
     "sagemaker",
